// Generated by delombok at Sat Jul 14 04:26:21 CEST 2018
/*
 * SK's Minecraft Launcher
 * Copyright (C) 2010-2014 Albert Pham <http://www.sk89q.com> and contributors
 * Please see LICENSE.txt for license information.
 */
package com.skcraft.launcher.model.modpack

import com.fasterxml.jackson.annotation.JsonCreator
import com.fasterxml.jackson.annotation.JsonIdentityInfo
import com.fasterxml.jackson.annotation.JsonValue
import com.fasterxml.jackson.annotation.ObjectIdGenerators
import com.google.common.base.Strings

@JsonIdentityInfo(generator = ObjectIdGenerators.PropertyGenerator::class, property = "name")
class Feature : Comparable<Feature> {

    var name: String? = null
    var description: String? = null
    var recommendation: Recommendation? = null
    var isSelected: Boolean = false

    enum class Recommendation {
        STARRED, AVOID;

        @JsonValue
        fun toJson(): String {
            return name.toLowerCase()
        }

        companion object {

            @JsonCreator
            fun fromJson(text: String): Recommendation {
                return valueOf(text.toUpperCase())
            }
        }
    }

    constructor() {}

    constructor(name: String, description: String, selected: Boolean) {
        this.name = name
        this.description = description
        this.isSelected = selected
    }

    constructor(feature: Feature) {
        name = feature.name
        description = feature.description
        isSelected = feature.isSelected
    }

    override fun hashCode(): Int {
        return super.hashCode()
    }

    override fun equals(other: Any?): Boolean {
        return super.equals(other)
    }

    override fun compareTo(o: Feature): Int {
        return Strings.nullToEmpty(name).compareTo(Strings.nullToEmpty(o.name))
    }

    override fun toString(): String {
        return "Feature(name=" + this.name + ", description=" + this.description + ", recommendation=" + this.recommendation + ", selected=" + this.isSelected + ")"
    }
}
