// Generated by delombok at Sat Jul 14 01:46:55 CEST 2018
/*
 * SK's Minecraft Launcher
 * Copyright (C) 2010-2014 Albert Pham <http://www.sk89q.com> and contributors
 * Please see LICENSE.txt for license information.
 */
package com.skcraft.launcher.builder

import com.xenomachina.argparser.ArgParser
import mu.KLogging
import java.io.File
import java.io.IOException

class ServerCopyExport(private val destDir: File) : DirectoryWalker() {

    init {
    }

    override fun getBehavior(name: String): DirectoryWalker.DirectoryBehavior {
        return if (name.startsWith(".")) {
            DirectoryWalker.DirectoryBehavior.SKIP
        } else if (name == "_SERVER") {
            DirectoryWalker.DirectoryBehavior.IGNORE
        } else if (name == "_CLIENT") {
            DirectoryWalker.DirectoryBehavior.SKIP
        } else {
            DirectoryWalker.DirectoryBehavior.CONTINUE
        }
    }

    @Throws(IOException::class)
    override fun onFile(file: File, relPath: String) {
        val dest = File(destDir, relPath)
        logger.info("Copying ${file.absolutePath} to ${dest.absolutePath}")
        dest.parentFile.mkdirs()
        file.copyRecursively(dest)
    }

    companion object : KLogging() {
        @Throws(IOException::class)
        @JvmStatic
        fun main(args: Array<String>) {
            val parser = ArgParser(args)
            val options = ServerExportOptions(parser)
            parser.force()
            logger.info("From: ${options.sourceDir.absolutePath}")
            logger.info("To: ${options.destDir.absolutePath}")
            val task = ServerCopyExport(options.destDir)
            task.walk(options.sourceDir)
        }
    }
}
