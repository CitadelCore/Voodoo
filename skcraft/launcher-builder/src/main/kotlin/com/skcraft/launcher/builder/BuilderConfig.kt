// Generated by delombok at Sat Jul 14 01:46:55 CEST 2018
/*
 * SK's Minecraft Launcher
 * Copyright (C) 2010-2014 Albert Pham <http://www.sk89q.com> and contributors
 * Please see LICENSE.txt for license information.
 */
package com.skcraft.launcher.builder

import com.fasterxml.jackson.annotation.JsonProperty
import com.google.common.collect.Lists
import com.skcraft.launcher.model.modpack.LaunchModifier
import com.skcraft.launcher.model.modpack.Manifest
import com.google.common.base.Preconditions.checkNotNull
import com.google.common.base.Strings.emptyToNull

class BuilderConfig {
    var name: String? = null
    var title: String? = null
    var gameVersion: String? = null
    @JsonProperty("launch")
    var launchModifier: LaunchModifier? = LaunchModifier()
        set(launchModifier) {
            field = launchModifier ?: LaunchModifier()
        }
    var features: List<FeaturePattern>? = Lists.newArrayList()
        set(features) {
            field = features ?: Lists.newArrayList()
        }
    var userFiles: FnPatternList? = FnPatternList()
        set(userFiles) {
            field = userFiles ?: FnPatternList()
        }

    fun update(manifest: Manifest) {
        manifest.updateName(name)
        manifest.updateTitle(title)
        manifest.updateGameVersion(gameVersion)
        manifest.launchModifier = launchModifier
    }

    fun registerProperties(applicator: PropertiesApplicator) {
        if (this.features != null) {
            for (feature in this.features!!) {
                checkNotNull<String>(emptyToNull(feature.feature.name), "Empty feature name found")
                applicator.register(feature)
            }
        }
        applicator.userFiles = this.userFiles
    }

    override fun equals(other: Any?): Boolean {
        if (other === this) return true
        if (other !is BuilderConfig) return false
        val other = other as BuilderConfig?
        if (!other!!.canEqual(this as Any)) return false
        if (if (this.name == null) other.name != null else this.name != other.name) return false
        if (if (this.title == null) other.title != null else this.title != other.title) return false
        if (if (this.gameVersion == null) other.gameVersion != null else this.gameVersion != other.gameVersion) return false
        if (if (this.launchModifier == null) other.launchModifier != null else this.launchModifier != other.launchModifier) return false
        if (if (this.features == null) other.features != null else this.features != other.features) return false
        return !if (this.userFiles == null) other.userFiles != null else this.userFiles != other.userFiles
    }

    protected fun canEqual(other: Any): Boolean {
        return other is BuilderConfig
    }

    override fun hashCode(): Int {
        val PRIME = 59
        var result = 1
        result = result * PRIME + (name?.hashCode() ?: 43)
        result = result * PRIME + (title?.hashCode() ?: 43)
        result = result * PRIME + (gameVersion?.hashCode() ?: 43)
        result = result * PRIME + (launchModifier?.hashCode() ?: 43)
        result = result * PRIME + (features?.hashCode() ?: 43)
        result = result * PRIME + (userFiles?.hashCode() ?: 43)
        return result
    }

    override fun toString(): String {
        return "BuilderConfig(name=" + this.name + ", title=" + this.title + ", gameVersion=" + this.gameVersion + ", launchModifier=" + this.launchModifier + ", features=" + this.features + ", userFiles=" + this.userFiles + ")"
    }
}
