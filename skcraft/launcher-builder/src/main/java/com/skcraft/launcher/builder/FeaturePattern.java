// Generated by delombok at Sat Jul 14 01:46:55 CEST 2018
/*
 * SK's Minecraft Launcher
 * Copyright (C) 2010-2014 Albert Pham <http://www.sk89q.com> and contributors
 * Please see LICENSE.txt for license information.
 */
package com.skcraft.launcher.builder;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.skcraft.launcher.model.modpack.Feature;

public class FeaturePattern {
    @JsonProperty("properties")
    private Feature feature;
    @JsonProperty("files")
    private FnPatternList filePatterns = new FnPatternList();

    public boolean matches(String path) {
        return filePatterns != null && filePatterns.matches(path);
    }

    @SuppressWarnings("all")
    public FeaturePattern() {
    }

    @SuppressWarnings("all")
    public Feature getFeature() {
        return this.feature;
    }

    @SuppressWarnings("all")
    public FnPatternList getFilePatterns() {
        return this.filePatterns;
    }

    @SuppressWarnings("all")
    public void setFeature(final Feature feature) {
        this.feature = feature;
    }

    @SuppressWarnings("all")
    public void setFilePatterns(final FnPatternList filePatterns) {
        this.filePatterns = filePatterns;
    }

    @Override
    @SuppressWarnings("all")
    public boolean equals(final Object o) {
        if (o == this) return true;
        if (!(o instanceof FeaturePattern)) return false;
        final FeaturePattern other = (FeaturePattern) o;
        if (!other.canEqual((Object) this)) return false;
        final Object this$feature = this.getFeature();
        final Object other$feature = other.getFeature();
        if (this$feature == null ? other$feature != null : !this$feature.equals(other$feature)) return false;
        final Object this$filePatterns = this.getFilePatterns();
        final Object other$filePatterns = other.getFilePatterns();
        if (this$filePatterns == null ? other$filePatterns != null : !this$filePatterns.equals(other$filePatterns)) return false;
        return true;
    }

    @SuppressWarnings("all")
    protected boolean canEqual(final Object other) {
        return other instanceof FeaturePattern;
    }

    @Override
    @SuppressWarnings("all")
    public int hashCode() {
        final int PRIME = 59;
        int result = 1;
        final Object $feature = this.getFeature();
        result = result * PRIME + ($feature == null ? 43 : $feature.hashCode());
        final Object $filePatterns = this.getFilePatterns();
        result = result * PRIME + ($filePatterns == null ? 43 : $filePatterns.hashCode());
        return result;
    }

    @Override
    @SuppressWarnings("all")
    public String toString() {
        return "FeaturePattern(feature=" + this.getFeature() + ", filePatterns=" + this.getFilePatterns() + ")";
    }
}
