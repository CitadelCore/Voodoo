on:
  push:
    branches:
     - main

name: Create Release Snapshot

jobs:
  build:
    name: Create Release Snapshot
    runs-on: ubuntu-latest

    steps:
     - name: run info
       run: |
         echo "run number: $GITHUB_RUN_NUMBER"
     - uses: actions/checkout@v2
     - uses: gradle/wrapper-validation-action@v1
     - name: Set up JDK 8
       uses: actions/setup-java@v1
       with:
         java-version: 8
     - name: Grant execute permission for gradlew
       run: chmod +x gradlew
     - name: Build and bintrayUpload
       env:
         BINTRAY_USER: ${{ secrets.BINTRAY_USER }}
         BINTRAY_API_KEY: ${{ secrets.BINTRAY_API_KEY }}
       run: ./gradlew build shadowJar exportVersion bintrayUpload -Pnodryrun
     - name: Set enviroment for github-release
       run: |
         echo "BRANCH=${GITHUB_REF##*/}" >> $GITHUB_ENV
         echo "VERSION=$(cat version.txt)" >> $GITHUB_ENV
     - name: Set enviroment RELEASE_TAG
       run: |
         echo "RELEASE_TAG=snapshot/${{ env.VERSION }}-${{ env.BRANCH }}-$GITHUB_RUN_NUMBER" >> $GITHUB_ENV
     - name: print env
       run: |
         echo "BRANCH=${{ env.BRANCH }}"
         echo "VERSION=${{ env.VERSION }}"
         echo "RELEASE_TAG=${{ env.RELEASE_TAG }}"
     - name: generate checksum
       run: |
         md5sum "voodoo/build/libs/voodoo-${{ env.VERSION }}-all.jar" > "voodoo/build/libs/voodoo-${{ env.VERSION }}-all.jar.md5"
     - name: Create prerelease
       uses: meeDamian/github-release@2.0
       with:
         token: ${{ secrets.GITHUB_TOKEN }}
         tag: ${{ env.RELEASE_TAG }}
         commitish: ${{ env.GITHUB_SHA }}
         name: ${{ env.VERSION }}
         prerelease: true
         body: Snapshot Release ${{ env.VERSION }}
         gzip: folders
         files: >
           wrapper.jar:wrapper/build/libs/wrapper-${{ env.VERSION }}-all.jar
           voodoo-${{ env.VERSION }}.jar:voodoo/build/libs/voodoo-${{ env.VERSION }}-all.jar
           voodoo-${{ env.VERSION }}.jar.md5:voodoo/build/libs/voodoo-${{ env.VERSION }}-all.jar.md5
           multimc-installer-${{ env.VERSION }}.jar:multimc/installer/build/libs/multimc-installer-${{ env.VERSION }}-all.jar
           server-installer-${{ env.VERSION }}.jar:server-installer/build/libs/server-installer-${{ env.VERSION }}-all.jar
           voodoo-scripting-${{ env.VERSION }}.jar:voodoo/scripting/build/libs/voodoo-scripting-${{ env.VERSION }}-all.jar
