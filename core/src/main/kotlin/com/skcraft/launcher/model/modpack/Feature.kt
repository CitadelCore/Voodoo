// Generated by delombok at Sat Jul 14 04:26:21 CEST 2018
/*
 * SK's Minecraft Launcher
 * Copyright (C) 2010-2014 Albert Pham <http://www.sk89q.com> and contributors
 * Please see LICENSE.txt for license information.
 */
package com.skcraft.launcher.model.modpack

import com.skcraft.launcher.builder.FnPatternList
import kotlinx.serialization.KOutput
import kotlinx.serialization.KSerializer
import kotlinx.serialization.Optional
import kotlinx.serialization.Serializable
import kotlinx.serialization.Serializer
import kotlinx.serialization.internal.EnumSerializer
import kotlinx.serialization.serializer

@Serializable
data class Feature(
    @Optional var name: String = "",
    @Optional var selected: Boolean = false,
    @Optional var description: String = "",
    @Optional var recommendation: Recommendation? = null,
    @Optional var files: FnPatternList = FnPatternList()
) {

    @Serializer(forClass = Feature::class)
    companion object : KSerializer<Feature> {
        override fun save(output: KOutput, obj: Feature) {
            val elemOutput = output.writeBegin(serialClassDesc)
            if (obj.name.isNotEmpty())
                elemOutput.writeStringElementValue(serialClassDesc, 0, obj.name)
            elemOutput.writeBooleanElementValue(serialClassDesc, 1, obj.selected)
            if (obj.description != "")
                elemOutput.writeStringElementValue(serialClassDesc, 2, obj.description)
            if (obj.recommendation != null) {
                elemOutput.writeElement(serialClassDesc, 3)
                elemOutput.write(EnumSerializer(Recommendation::class), obj.recommendation!!)
            }
            if (obj.files != FnPatternList()) {
                elemOutput.writeElement(serialClassDesc, 4)
                elemOutput.write(FnPatternList::class.serializer(), obj.files)
            }
            output.writeEnd(serialClassDesc)
        }
    }
}
