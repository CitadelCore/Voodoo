import proguard.gradle.ProGuardTask

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.sf.proguard', name: 'proguard-gradle', version: project.proguard_version
    }
}

plugins {
    id 'application'
}

apply plugin: 'com.github.johnrengelman.shadow'

mainClassName = "voodoo.BootstrapKt"
version = project.version

dependencies {
    compile project(':base:cmd')
    compile project(':util')
}

shadowJar {
    classifier = "fat"
}

build.dependsOn(shadowJar)

def moduleName
def fileRegex

if(project.hasProperty('target')) {
    if (project.target == "voodoo") {
        moduleName = "voodoo"
        fileRegex = /^[Vv]oodoo(-[^-]*)?(?!-fat)\\.jar$/
        shadowJar.baseName = "bootstrap-voodoo"
    } else if (project.target == "hex") {
        moduleName = "hex"
        fileRegex = /^hex(-[^-]*)?(?!-fat)\\.jar$/
        shadowJar.baseName = "bootstrap-hex"
    } else {
        throw new InvalidUserDataException("invalid target property")
    }
}

compileKotlin.doFirst {
    copy {
        from "src/template/kotlin/voodoo/"
        into "$buildDir/generated-src/voodoo/"
        expand(
                JENKINS_URL: "https://ci.elytradev.com",
                JENKINS_JOB: "elytra/Voodoo/rewrite",
                MODULE_NAME: moduleName,
                FILE_REGEX: fileRegex
        )
    }
}

task minify(type: ProGuardTask, dependsOn: 'shadowJar') {
    libraryjars "${System.getProperty('java.home')}/lib/rt.jar"
    libraryjars "${System.getProperty('java.home')}/lib/jce.jar"

    injars  shadowJar
    outjars "build/libs/$shadowJar.baseName${version != 'unspecified' ? "-$version" : ""}.jar"

    printmapping 'build/libs/out.map'

    ignorewarnings()
//    optimizations '!code/allocation/variable'
//    optimizations '*'

    dontobfuscate()
    optimizations '!code/simplification/arithmetic,!field/*,!class/merging/*,!code/allocation/variable'

    keepclasseswithmembers 'public class * { \
        public static void main(java.lang.String[]); \
    }'

    assumenosideeffects 'class kotlin.jvm.internal.Intrinsics { \
        static void checkParameterIsNotNull(java.lang.Object, java.lang.String); \
    }'

    // Jackson
    keepattributes '*Annotation*'
    keepattributes 'EnclosingMethod'
    keepattributes 'Signature'
    keepnames 'class com.fasterxml.jackson.** {  *; }'
    dontwarn 'com.fasterxml.jackson.databind.**'
    keep 'class org.codehaus.** { *; }'
    keepclassmembers 'public final enum org.codehaus.jackson.annotate.JsonAutoDetect$Visibility { \
       public static final org.codehaus.jackson.annotate.JsonAutoDetect$Visibility *; }'
    keepclassmembers 'enum * { \
        public static **[] values(); \
        public static ** valueOf(java.lang.String); \
    }'

    // Kotlin
    keep 'class org.jetbrains.annotations.** { *; }'
    keepclassmembers 'class ** { \
        @org.jetbrains.annotations.ReadOnly public *; \
    }'
    keep 'class kotlin.Metadata { *; }'

    //Kotlin Reflect
    keep 'class kotlin.reflect.** { *; }'

    // Coroutines
    dontwarn 'kotlinx.coroutines.*'

    // JNA
    dontwarn 'java.awt.*'
    keep 'class com.sun.jna.* { *; }'
    keepclassmembers 'class * extends com.sun.jna.* { public *; }'

    // apache commons compress
    dontwarn 'org.apache.commons.compress.compressors.**'
    dontwarn 'org.apache.commons.compress.archivers.**'

    //KLogging
    keep 'class mu.** { *; }'

    // Logging
    keep 'class ch.qos.** { *; }'
    keep 'class org.slf4j.** { *; }'
    keepattributes '*Annotation*'
    dontwarn 'ch.qos.logback.core.net.*'

    // Voodoo
    keepattributes 'LineNumberTable'
    keep 'public class voodoo.** {\
        *;\
    }'

//    keepnames 'class * { *; }'
}

configure(minify) {
    group = 'build'
    description = 'Optimize JAR'
}

build.dependsOn(minify)
